name: Python application👩‍💻

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies🕵️‍♀️
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

#     - name: Lint with flake8
    - name: Checking for the Errors in the code📍
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

#     - name: Test with pytest
#       run: |
#         pip install pytest
#         export PYTHONPATH=countdown_timer.py
#         pytest
        
#     - name: Build and push Docker image
#       uses: docker/build-push-action@v2
  
#     - name: Build the docker file
#       uses: docker/setup-buildx-action@v2.5.0
#       with:
#           context: .
# #           push: true
#           tags: sumanprasad007/python-app:latest

    - name: Build Docker image📜
      run: |
        docker build -t sumanprasad007/python-app:latest .
        
    - name: Execute Dockerfile☸
      run: |
          docker run -d sumanprasad007/python-app:latest
          container_id=$(docker ps -q --filter ancestor=sumanprasad007/python-app:latest)
          sleep 5
          docker stop $container_id

          
    - name: Successfully run the Docker Container🎉
      run: | 
          echo "Congratulations for successfully running the Docker Container for your Python Application"
